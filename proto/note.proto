syntax = "proto3";

package grpc_notes_microservices_test.proto.noteapi;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

option go_package = "github.com/sergio-id/go-notes/proto/gen";

service NoteService {
  rpc ListNotes(ListNotesRequest) returns (ListNotesResponse) {
    option (google.api.http) = {
      get: "/v1/api/note"
    };
    option (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List notes";
      description: "List notes on the server.";
      tags: "Notes";
      parameters: {
        headers: {
          name: "Authorization",
          description: "Bearer token",
          type: STRING,
          required: true
        };
      };
    };
  }

  rpc GetNote(GetNoteRequest) returns (Note) {
    option (google.api.http) = {
      get: "/v1/api/note/{id}"
    };
    option (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a note"
      description: "Get a note on the server."
      tags: "Notes"
    };
  }

  rpc CreateNote(CreateNoteRequest) returns (Note) {
    option (google.api.http) = {
      post: "/v1/api/note"
      body: "*"
    };
    option (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Create a note"
      description: "Create a note on the server."
      tags: "Notes"
    };
  }

  rpc UpdateNote(UpdateNoteRequest) returns (Note) {
    option (google.api.http) = {
      put: "/v1/api/note/{id}"
      body: "*"
    };
    option (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Update a note"
      description: "Update a note on the server."
      tags: "Notes"
    };
  }

  rpc DeleteNote(DeleteNoteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/api/note/{id}"
    };
    option (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete a note"
      description: "Delete a note on the server."
      tags: "Notes",
    };
  }
}

message Note {
  string id = 1;
  string user_id = 2;
  optional string category_id = 3;
  string title = 4;
  string content = 5;
  bool pinned = 6;
  int32 priority = 7;
  google.protobuf.Timestamp updated_at = 8;
  google.protobuf.Timestamp created_at = 9;
}

message ListNotesRequest {
  optional int32 limit = 1;
  optional int32 offset = 2;
}
message ListNotesResponse {
  repeated Note notes = 1;
}

message GetNoteRequest {
  string id = 1;
}

message CreateNoteRequest {
  optional string category_id = 1;
  string title = 2;
  string content = 3;
  bool pinned = 4;
  int32 priority = 5;
}

message UpdateNoteRequest {
  string id = 1;
  string title = 2;
  string content = 3;
  bool pinned = 4;
  int32 priority = 5;
}

message DeleteNoteRequest {
  string id = 1;
}
